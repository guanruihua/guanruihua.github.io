"use strict";(self.webpackChunkguanruihua_github_io=self.webpackChunkguanruihua_github_io||[]).push([[22],{22:(e,l,t)=>{t.r(l),t.d(l,{default:()=>o});var n=t(282),i=t(5296),r=t(6170);function o(){const e=[{title:"描边 stroke()",children:"前面的案例中，其实已经知道使用 stroke() 方法进行描边了。这里就不再多讲这个方法。"},{title:"线条宽度 lineWidth",children:i.createElement(n.xA,null,i.createElement("p",null,"lineWidth 默认值是 1 ，默认单位是 px。"),i.createElement(r.I,{draw:e=>{e.beginPath(),e.moveTo(50,50),e.lineTo(250,50),e.lineWidth=10,e.stroke(),e.beginPath(),e.moveTo(50,100),e.lineTo(250,100),e.lineWidth=20,e.stroke(),e.beginPath(),e.moveTo(50,150),e.lineTo(250,150),e.lineWidth=30,e.stroke()}}))},{title:"线条颜色 strokeStyle",children:i.createElement(n.xA,null,i.createElement(r.I,{draw:e=>{e.moveTo(50,50),e.lineTo(250,50),e.lineWidth=20,e.strokeStyle="pink",e.stroke()}}))},{title:"线帽 lineCap",children:i.createElement(n.xA,null,i.createElement("p",null,"属性值包括："),i.createElement("ul",null,i.createElement("li",null,"butt: 默认值，无线帽"),i.createElement("li",null,"square: 方形线帽"),i.createElement("li",null,"round: 圆形线帽")),i.createElement(r.I,{draw:e=>{e.beginPath(),e.moveTo(50,50),e.lineTo(250,50),e.lineWidth=10,e.stroke(),e.beginPath(),e.lineCap="square",e.moveTo(50,100),e.lineTo(250,100),e.lineWidth=20,e.stroke(),e.beginPath(),e.lineCap="round",e.moveTo(50,150),e.lineTo(250,150),e.lineWidth=30,e.stroke()}}))},{title:"拐角样式 lineJoin",children:i.createElement(n.xA,null,i.createElement("p",null,"属性值包括："),i.createElement("ul",null,i.createElement("li",null,"miter: 默认值，尖角"),i.createElement("li",null,"round: 圆角"),i.createElement("li",null,"bevel: 斜角")),i.createElement(r.I,{draw:e=>{e.beginPath(),e.moveTo(50,50),e.lineTo(250,50),e.lineTo(250,90),e.lineWidth=10,e.stroke(),e.beginPath(),e.moveTo(50,100),e.lineTo(250,100),e.lineTo(250,140),e.lineWidth=10,e.lineJoin="bevel",e.stroke(),e.beginPath(),e.moveTo(50,150),e.lineTo(250,150),e.lineTo(250,190),e.lineWidth=10,e.lineJoin="round",e.stroke()}}))},{title:"虚线 setLineDash()",children:i.createElement(n.xA,null,i.createElement("p",null,"虚线分3种情况"),i.createElement("ul",null,i.createElement("li",null,"只传1个值"),i.createElement("li",null,"有2个值"),i.createElement("li",null,"有3个以上的值")),i.createElement(r.I,{draw:e=>{e.lineWidth=10,e.beginPath(),e.moveTo(50,50),e.lineTo(250,50),e.setLineDash([10]),e.stroke(),e.beginPath(),e.moveTo(50,100),e.lineTo(250,100),e.setLineDash([10,20]),e.stroke(),e.beginPath(),e.moveTo(50,150),e.lineTo(250,150),e.setLineDash([10,20,5]),e.stroke()}},i.createElement("p",null,"还可以始终 cxt.getLineDash() 获取虚线不重复的距离； "),i.createElement("p",null,"用 cxt.lineDashOffset 设置虚线的偏移位。")))},{title:"填充 fill() & fillStyle",children:i.createElement(n.xA,null,i.createElement(r.I,{draw:e=>{e.beginPath(),e.fillStyle="pink",e.moveTo(50,50),e.lineTo(250,50),e.lineTo(250,90),e.lineTo(50,90),e.closePath(),e.fill("evenodd"),e.stroke(),e.beginPath(),e.rect(50,120,200,50),e.fill(),e.stroke()}}))}].reverse();return i.createElement(n.kQ,{items:e})}},6170:(e,l,t)=>{t.d(l,{I:()=>r});var n=t(5296),i=t(282);function r({draw:e,children:l}){const t=n.useRef(null);return n.useEffect((()=>{(()=>{if(!t.current)return;const l=t.current,n=null==l?void 0:l.getContext("2d");n&&(null==e||e(n))})()}),[]),n.createElement(i.xA,null,n.createElement("canvas",{ref:t,width:300,height:240,style:{borderRadius:4,background:"rgba(255,255,255,1)"}}),l)}}}]);